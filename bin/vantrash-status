#!/usr/bin/perl
use FindBin;
use lib "$FindBin::Bin/../lib";
use App::VanTrash::Model;
use Getopt::Long;

my $base_path = "$FindBin::Bin/..";
my $verbose;
my $reminder;
GetOptions(
    'base-path=s' => \$base_path,
    'v|verbose'   => \$verbose,
    'reminder=s'  => \$reminder,
) or die "USAGE: $0 --base-path=foo";

my $model = App::VanTrash::Model->new(
    base_path => $base_path,
);

if ($reminder) {
    my $r = $model->reminders->by_id($reminder);
    die "Could not find reminder '$reminder'\n" unless $r;
    print $r->dump;
    exit;
}

my $reminders = $model->reminders->all;
print "Reminders: " . @$reminders . "\n";
my @confirmed;
my @unconfirmed;
for my $r (@$reminders) {
    if ($r->{confirmed}) {
        push @confirmed, $r;
    }
    else {
        push @unconfirmed, $r;
    }
}

print "Unconfirmed reminders:\n";
for my $r (@unconfirmed) {
    my $date = DateTime->from_epoch(epoch => $r->{created_at});
    print "  $r->{id} $r->{zone} - $r->{email} ($r->{target}) created: " 
        . $date->ymd . " " . $date->hms . "\n";
}

print "\nConfirmed reminders:\n";
for my $r (@confirmed) {
    my $last = DateTime->from_epoch(epoch => $r->{last_notified});
    $last = join(' ', $last->ymd, $last->hms);
    my $next = DateTime->from_epoch(epoch => $r->{next_pickup});
    $next = join(' ', $next->ymd, $next->hms);
    print "  $r->{zone} - $r->{email} ($r->{target}) last_notified: $last - next_pickup: $next"
        . "\n";
}
